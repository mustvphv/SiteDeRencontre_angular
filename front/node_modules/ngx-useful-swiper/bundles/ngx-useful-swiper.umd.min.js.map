{"version":3,"sources":["ng://ngx-useful-swiper/lib/swiper/swiper.component.ts","ng://ngx-useful-swiper/lib/ngx-useful-swiper.module.ts"],"names":["SwiperComponent","elementRef","changeDetectorRef","this","slideCount","initialized","shouldInitialize","Object","defineProperty","prototype","value","ngAfterViewInit","setup","swiper","nativeElement","querySelector","swiperWrapper","childElementCount","Swiper","config","detectChanges","ngAfterViewChecked","update","Component","args","selector","template","ElementRef","ChangeDetectorRef","Input","NgxUsefulSwiperModule","NgModule","declarations","imports","CommonModule","exports"],"mappings":"2aAAA,IAAAA,EAAA,WA8BE,SAAAA,EACUC,EACAC,GADAC,KAAAF,WAAAA,EACAE,KAAAD,kBAAAA,EANFC,KAAAC,WAAa,EACbD,KAAAE,aAAc,EACdF,KAAAG,kBAAmB,EA6C7B,OAtDEC,OAAAC,eAAyBR,EAAAS,UAAA,aAAU,KAAnC,SAAoCC,GAClCP,KAAKG,kBAAmBH,KAAKE,aAAsBK,mCAerDV,EAAAS,UAAAE,gBAAA,WACMR,KAAKG,kBACPH,KAAKS,SAITZ,EAAAS,UAAAG,MAAA,WACOT,KAAKU,SAEJV,KAAKF,WAAWa,cAAcC,gBAChCZ,KAAKa,cAAgBb,KAAKF,WAAWa,cAAcC,cACjD,mBAEFZ,KAAKC,WAAaD,KAAKa,cAAcC,kBACrCd,KAAKU,OAAS,IAAIK,EAChBf,KAAKF,WAAWa,cAAcC,cAAc,gBAC5CZ,KAAKgB,QAEPhB,KAAKD,kBAAkBkB,iBAGzBjB,KAAKG,kBAAmB,IAI5BN,EAAAS,UAAAY,mBAAA,WACMlB,KAAKG,kBACPH,KAAKS,QAILT,KAAKa,eACLb,KAAKC,aAAeD,KAAKa,cAAcC,oBAEvCd,KAAKC,WAAaD,KAAKa,cAAcC,kBACrCd,KAAKU,OAAOS,+BA5DjBC,EAAAA,UAASC,KAAA,CAAC,CAETC,SAAU,SACVC,SAAA,mRARAC,EAAAA,kBAFAC,EAAAA,qDAeCC,EAAAA,0BACAA,EAAAA,MAAKL,KAAA,CAAC,iBAsDTxB,EAzEA,GCAA8B,EAAA,WAIA,SAAAA,KAKoC,2BALnCC,EAAAA,SAAQP,KAAA,CAAC,CACRQ,aAAc,CAAChC,GACfiC,QAAS,CAACC,EAAAA,cACVC,QAAS,CAACnC,OAEwB8B,EATpC","sourcesContent":["import {\r\n  AfterViewChecked,\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Input\r\n} from '@angular/core';\r\nimport Swiper, { SwiperOptions } from 'swiper';\r\n\r\n@Component({\r\n  // tslint:disable-next-line: component-selector\r\n  selector: 'swiper',\r\n  templateUrl: './swiper.component.html',\r\n  styleUrls: ['./swiper.component.css']\r\n})\r\nexport class SwiperComponent implements AfterViewChecked, AfterViewInit {\r\n  // add all the options as optional settings and use them to create an options object\r\n  @Input() config: SwiperOptions;\r\n  @Input('initialize') set initialize(value: boolean) {\r\n    this.shouldInitialize = this.initialized ? false : value;\r\n  }\r\n\r\n  swiper: any;\r\n\r\n  private swiperWrapper: any;\r\n  private slideCount = 0;\r\n  private initialized = false;\r\n  private shouldInitialize = true;\r\n\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n    private changeDetectorRef: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngAfterViewInit() {\r\n    if (this.shouldInitialize) {\r\n      this.setup();\r\n    }\r\n  }\r\n\r\n  setup() {\r\n    if (!this.swiper) {\r\n      // if rendered on server querySelector is undefined\r\n      if (this.elementRef.nativeElement.querySelector) {\r\n        this.swiperWrapper = this.elementRef.nativeElement.querySelector(\r\n          '.swiper-wrapper'\r\n        );\r\n        this.slideCount = this.swiperWrapper.childElementCount;\r\n        this.swiper = new Swiper(\r\n          this.elementRef.nativeElement.querySelector('swiper > div'),\r\n          this.config\r\n        );\r\n        this.changeDetectorRef.detectChanges();\r\n      }\r\n\r\n      this.shouldInitialize = false;\r\n    }\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    if (this.shouldInitialize) {\r\n      this.setup();\r\n    }\r\n\r\n    if (\r\n      this.swiperWrapper &&\r\n      this.slideCount !== this.swiperWrapper.childElementCount\r\n    ) {\r\n      this.slideCount = this.swiperWrapper.childElementCount;\r\n      this.swiper.update();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { SwiperComponent } from './swiper/swiper.component';\r\n\r\n@NgModule({\r\n  declarations: [SwiperComponent],\r\n  imports: [CommonModule],\r\n  exports: [SwiperComponent]\r\n})\r\nexport class NgxUsefulSwiperModule {}\r\n"]}